mixin renderComment(master, node, depth, parent, cancomment)
	li(class="depth_#{depth}")
		a.commentAnchor(name="viewcomment-#{node.comment.id}")
		div.comment_container(id="comment_#{node.comment.id}")
			div.gravatar
				img.left(src="#{_attachment(node.comment.avatar, 55)}",width="76px",height="80px")
			div.comment_text(mydepth="#{depth}")
				h5= node.comment.username
				p(style="margin-bottom: -4px"): em
					= _timeSince(node.comment.date)
					if cancomment
						a.right.replybutton(href="#", do="replyComment") Reply
					if node.comment.canedit
						br
						a.right.replybutton(href="#", do="editComment") Edit
					if node.comment.candelete
						br
						a.right.replybutton(href="#", do="deleteComment") Delete
					
				p.bbcode
					!= node.comment.content
				+editForm(master, node.comment, true)
				- if (depth == 3) {
				+replyForm(master, parent, true)
				- } else {
				+replyForm(master, node.comment.id, true)
				- }
		ul.comment_list(id="children_#{node.comment.id}")
			each sub in node.children
				- if (depth == 3) {
				+renderComment(master, sub, depth, parent)
				- } else {
				+renderComment(master, sub, depth+1, node.comment.id)
				- }

mixin comments(tree, master, cancomment)
	if cancomment
		+replyForm(master, 0, false)
	ul.comment_list(id="children_0")
		each node in tree
			+renderComment(master, node, 1, node.comment.parent, cancomment)

mixin editForm(master, comment, hidden)
	form.edit(do="comment_submitEdit",method="POST",style="#{hidden ? 'display:none;' : 'display:block'}",id="edit_#{parent}")
		textarea.textarea.round_6(rows="7",cols="72")= comment.rawcontent
		br
		input(type="hidden", name="commentid", value="#{comment.id}")
		input.fancy.green(type="submit", value="Save Comment")
		input.fancy(type="button", value="Cancel", onclick="sub('comment_cancelEdit', this);")
		br
		br

mixin replyForm(master, parent, hidden)
	form.reply(do="comment_submitReply",method="POST",style="#{hidden ? 'display:none;' : 'display:block'}",id="reply_#{parent}")
		textarea.textarea.round_6(rows="7",cols="72")
		br
		input(type="hidden", name="master", value="#{master}")
		input(type="hidden", name="parent", value="#{parent}")
		input.fancy.green(type="submit", value="Post Reply")
		- if (hidden) {
		input.fancy(type="button", value="Cancel", onclick="sub('comment_cancelReply', this);")
		- }
		br
		br

block append subs
	+sub("comment_cancelReply", function(obj) {
		var r = $(obj).closest('.reply');
		var instance = r.children('textarea').qeditor().destroy();
		r.attr('style', 'display:none');

		return false;
	})
	+sub("comment_cancelEdit", function(obj) {
		$(obj).closest(".comment_text").find('.edit>textarea').qeditor().destroy();

		$(obj).closest(".comment_text").find('.bbcode').attr('style', 'display:block');
		$(obj).closest(".comment_text").find('.edit').attr('style', 'display:none');

		return false;
	})
	+sub("comment_submitEdit", function(obj) {
		var instance = $(obj).closest(".comment_text").find('.edit>textarea').qeditor();
		var content = instance.val();
		var commentid = $(obj).closest(".comment_text").children('.edit').find("input[name=commentid]").val();

		$.post("/comment/" + commentid + "/edit", {content: content}).success(function(result) {
			instance.destroy();
			$(obj).closest(".comment_text").find('.bbcode').html(result);
			$(obj).closest(".comment_text").find('.edit').attr('style', 'display:none');
			$(obj).closest(".comment_text").find('.bbcode').attr('style', 'display:block');
		}).error(function() {
			console.log("err"); // TODO
		})

		return false;
	})
	+sub("deleteComment", function(obj) {
		qconfirm("Are you sure you want to delete this comment?", function() {
			var commentid = $(obj).closest(".comment_text").children('.edit').find("input[name=commentid]").val();
			$.get("/comment/" + commentid + "/delete").success(function() {
				$(obj).closest("li").remove();
			}).error(function() {
				console.log('err'); // TODO
			})
		})

		return false;
	})
	+sub("editComment", function(obj) {
		//$(obj).closest(".comment_text").find('.bbcode').attr('style', 'display:none');
		$(obj).closest(".comment_text").find('.edit').attr('style', 'display:block');

		$(obj).closest(".comment_text").find('.edit>textarea').qeditor().init("600px");

		return false;
	})
	+sub("replyComment", function(obj) {
		$(obj).closest(".comment_text").find('.reply').attr('style', 'display:block');
		$(obj).closest(".comment_text").find('.reply>textarea').qeditor().init("600px");

		return false;
	})
	+sub("comment_submitReply", function(obj) {
		var master = $(obj).find("input[name=master]").val();
		var parent = $(obj).find("input[name=parent]").val();
		var depth = parseInt($(obj).closest('.comment_text').attr('mydepth'));
		if (!depth)
			depth = 1;
		else {
			if (depth != 3) depth = depth+1;
		}

		var r = $(obj).closest('.reply');

		var instance = r.children('textarea').qeditor();

		var content = instance.val();

		$.post("/comment/submit", {parent: parent, master: master, content: content, depth: depth}).success(function(result) {
			instance.val("");
			instance.destroy();
			r.children('textarea').val("");
			r.attr('style', 'display:none');

			console.log($("#children_" + parent));
			$("#children_" + parent).append(result)
			var n = $(result).find('a.commentAnchor').attr('name');
			hookChange("#" + n);
		}).error(function(result) {
			console.log("err"); // TODO
		})

		return false;
	})
	+sub("onPageLoad", function(obj) {
		$("#reply_0 textarea").qeditor().init();
	})